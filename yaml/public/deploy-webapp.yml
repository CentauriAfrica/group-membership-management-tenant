parameters:
  solutionAbbreviation: ''
  environmentAbbreviation: ''
  serviceConnection: ''
  location: ''
  root: ''
  tenantId: ''


steps:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy WebApp compute resources'
    inputs:
      azureResourceManagerConnection: ${{parameters.serviceConnection}}
      subscriptionId: ${{parameters.subscriptionId}}
      resourceGroupName: ${{parameters.solutionAbbreviation}}-compute-${{parameters.environmentAbbreviation}}
      location: ${{parameters.location}}
      csmFile: ${{ parameters.root }}/webapp_arm_templates/UI/Infrastructure/compute/template.bicep
      csmParametersFile: ${{ parameters.root }}/webapp_arm_templates/UI/Infrastructure/compute/parameters/parameters.${{parameters.environmentAbbreviation}}.json
      overrideParameters: -location "${{parameters.location}}"
                          -solutionAbbreviation "${{parameters.solutionAbbreviation}}"
                          -environmentAbbreviation "${{parameters.environmentAbbreviation}}"
      deploymentMode: 'Incremental'
      deploymentOutputs: deploymentOutputs

  - task: PowerShell@2
    name: 'SetDeploymentOutputVariables'
    displayName: 'Set Deployment Output Variables'
    inputs:
      targetType: inline
      script: |
        $armOutputObj = '$(deploymentOutputs)' | ConvertFrom-Json
        $armOutputObj.PSObject.Properties | ForEach-Object {
          $keyname = $_.Name
          $value = $_.Value.value

          # Creates a standard pipeline variable
          Write-Output "##vso[task.setvariable variable=$keyName;issecret=true]$value"

          # Display keys in pipeline
          Write-Output "output variable: $keyName"
        }
      pwsh: true

  # We have to set the environment variables used by the react app in the task
  # that builds the app because they are resolved at build time.
  - task: NodeTool@0
    name: 'InstallNode'
    displayName: 'Install Node'
    inputs:
      versionSpec: '14.19.0'

  - task: Npm@1
    displayName: 'npm install pnpm@7.33.5'
    inputs:
      command: custom
      verbose: false
      customCommand: 'install -g pnpm@7.33.5'
 
  - task: PowerShell@2
    displayName: 'pnpm run build'
    inputs:
      targetType: 'inline'
      script: pnpm install && pnpm run build 
      workingDirectory: '${{ parameters.root }}/webapp_package/web-app'
    env:
      REACT_APP_AAD_UI_APP_CLIENT_ID: $(ui_app_client_id)
      REACT_APP_AAD_API_APP_CLIENT_ID: $(api_app_client_id)
      REACT_APP_AAD_APP_TENANT_ID: $(ui_app_tenant_id)
      REACT_APP_AAD_APP_SERVICE_BASE_URI: $(api_service_base_uri)
      REACT_APP_APPINSIGHTS_CONNECTIONSTRING: $(app_insights_connection_string)
      REACT_APP_VERSION_NUMBER: $(Build.BuildNumber)
      REACT_APP_SHAREPOINTDOMAIN: $(sharepoint_domain)
      REACT_APP_DOMAINNAME: $(tenant_domain)
      REACT_APP_ENVIRONMENT_ABBREVIATION: ${{parameters.environmentAbbreviation}}

  - task: AzureStaticWebApp@0
    name: DeployStaticWebApp
    displayName: Deploy Static Web App
    inputs:
      app_location: 'build'
      skip_app_build: true
      output_location: ''
      cwd: '${{ parameters.root }}/webapp_package/web-app'
      azure_static_web_apps_api_token: $(deployment_token)